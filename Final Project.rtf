{\rtf1\ansi\ansicpg950\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset136 PingFangTC-Regular;
\f3\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;\red170\green4\blue249;\red14\green0\blue255;\red60\green60\blue60;
}
{\*\expandedcolortbl;;\csgenericrgb\c66667\c1569\c97647;\csgenericrgb\c5490\c0\c100000;\csgenericrgb\c23529\c23529\c23529;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sb45\sa75\partightenfactor0

\f0\fs24 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1\fs21 \cf0 digitDatasetPath = \cf2 '/Users/wujunting/Documents/MATLAB/
\f2 \'a4\'fa\'be\'a6\'b7\'d3\'a4\'f9
\f1 /
\f2 \'a4\'77\'a4\'c1\'a7\'b9\'aa\'ba\'af\'66\'bc\'78\'b7\'d3\'a4\'f9
\f1 '\cf0 ;\
mainPath = \cf2 '/Users/wujunting/Documents/MATLAB/
\f2 \'a4\'fa\'be\'a6\'b7\'d3\'a4\'f9
\f1 /
\f2 \'a9\'d2\'a6\'b3\'b9\'cf
\f1 '\cf0 ;\
imds = imageDatastore(digitDatasetPath, \cf3 ...\
\cf0     \cf2 'IncludeSubfolders'\cf0 ,true,\cf2 'LabelSource'\cf0 ,\cf2 'foldernames'\cf0 );\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 [imdsTrain,imdsValidation] = splitEachLabel(imds,0.7,\cf2 'randomized'\cf0 );\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 numTrainImages = numel(imdsTrain.Labels);\
idx = randperm(numTrainImages,16);\
figure\
\pard\pardeftab720\partightenfactor0
\cf3 for \cf0 i = 1:16\
    subplot(4,4,i)\
    I = readimage(imdsTrain,idx(i));\
    imshow(I)\
\cf3 end\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\pardeftab720\sb45\sa75\partightenfactor0

\f3\b\fs30 \cf4 Load Pretrained Network\
\pard\pardeftab720\sb30\sa135\partightenfactor0

\f0\b0\fs21 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 net = alexnet;\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 analyzeNetwork(net)\
\pard\pardeftab720\sb150\sa135\partightenfactor0
\cf0 \
\pard\pardeftab720\sb30\sa135\partightenfactor0

\f0 \cf0 The first layer, the image input layer, requires input images of size 227-by-227-by-3, where 3 is the number of color c\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 inputSize = net.Layers(1).InputSize\
\
\pard\pardeftab720\sb45\sa75\partightenfactor0

\f3\b\fs30 \cf4 Replace Final Layers\
\pard\pardeftab720\sb30\sa135\partightenfactor0

\f0\b0\fs21 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 layersTransfer = net.Layers(1:end-3);\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 numClasses = numel(categories(imdsTrain.Labels))\
\
layers = [\
    layersTransfer\
    fullyConnectedLayer(numClasses,\cf2 'WeightLearnRateFactor'\cf0 ,20,\cf2 'BiasLearnRateFactor'\cf0 ,20)\
    softmaxLayer\
    classificationLayer];\
\pard\pardeftab720\sb45\sa75\partightenfactor0

\f3\b\fs30 \cf4 Train Network\
\pard\pardeftab720\sb30\sa135\partightenfactor0

\f0\b0\fs21 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 pixelRange = [-25 25];\
imageAugmenter = imageDataAugmenter( \cf3 ...\
\cf0     \cf2 'RandXReflection'\cf0 ,true, \cf3 ...\
\cf0     \cf2 'RandXTranslation'\cf0 ,pixelRange, \cf3 ...\
\cf0     \cf2 'RandYTranslation'\cf0 ,pixelRange, \cf3 ...\
\cf0     \cf2 'RandYReflection'\cf0 ,true, \cf3 ...\
\cf0     \cf2 'RandXScale'\cf0 ,[0.9 1.1], \cf3 ...\
\cf0     \cf2 'RandYScale'\cf0 ,[0.9 1.1]);\
augimdsTrain = augmentedImageDatastore(inputSize(1:2),imdsTrain, \cf3 ...\
\cf0     \cf2 'DataAugmentation'\cf0 ,imageAugmenter);\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 augimdsValidation = augmentedImageDatastore(inputSize(1:2),imdsValidation);\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 options = trainingOptions(\cf2 'sgdm'\cf0 , \cf3 ...\
\cf0     \cf2 'MiniBatchSize'\cf0 ,10, \cf3 ...\
\cf0     \cf2 'MaxEpochs'\cf0 ,6, \cf3 ...\
\cf0     \cf2 'InitialLearnRate'\cf0 ,1e-4, \cf3 ...\
\cf0     \cf2 'Shuffle'\cf0 ,\cf2 'every-epoch'\cf0 , \cf3 ...\
\cf0     \cf2 'ValidationData'\cf0 ,augimdsValidation, \cf3 ...\
\cf0     \cf2 'ValidationFrequency'\cf0 ,3, \cf3 ...\
\cf0     \cf2 'Verbose'\cf0 ,false, \cf3 ...\
\cf0     \cf2 'Plots'\cf0 ,\cf2 'training-progress'\cf0 );\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 netTransfer = trainNetwork(augimdsTrain,layers,options);\
\pard\pardeftab720\sb45\sa75\partightenfactor0

\f3\b\fs30 \cf4 Classify Validation Images\
\pard\pardeftab720\sb30\sa135\partightenfactor0

\f0\b0\fs21 \cf0 Classify the validation images using the fine-tuned network.\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 [YPred,scores] = classify(netTransfer,augimdsValidation);\
idx = randperm(numel(imdsValidation.Files),4);\
figure\
\pard\pardeftab720\partightenfactor0
\cf3 for \cf0 i = 1:4\
    subplot(2,2,i)\
    I = readimage(imdsValidation,idx(i));\
    imshow(I)\
    label = YPred(idx(i));\
    title(string(label));\
\cf3 end\
\pard\pardeftab720\sb150\sa135\partightenfactor0

\f0 \cf0 \
\pard\pardeftab720\partightenfactor0

\f1 \cf0 YValidation = imdsValidation.Labels;\
accuracy = mean(YPred == YValidation)\
\
\
\
A = 1\
}